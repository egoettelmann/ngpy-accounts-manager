version: 2.1

# Defining parameters
parameters:
  docker-image-api:
    type: string
    default: "cimg/python:3.7"
  docker-image-ui:
    type: string
    default: "cimg/node:14.19"
  branch-release:
    type: string
    default: "release"
# Additional environment variables are required:
#  - AWS_ACCESS_KEY_ID
#  - AWS_SECRET_ACCESS_KEY
#  - AWS_REGION
#  - AWS_ECR_REGISTRY_ID
#  - AWS_S3_ARCHIVE

# Adding required orbs
orbs:
  browser-tools: circleci/browser-tools@1.2.5
  aws-ecr: circleci/aws-ecr@8.0.0
  aws-s3: circleci/aws-s3@3.0.0

jobs:
  # Build the API
  build-api:
    working_directory: ~/ngpy-accounts-manager/ngpy-accounts-manager-api
    docker:
      - image: << pipeline.parameters.docker-image-api >>
    steps:
      - checkout:
          path: ~/ngpy-accounts-manager
      - restore_cache:
          keys:
            - pip-{{ checksum "requirements.txt" }}
            - pip-
      - run:
          name: "Get dependencies"
          command: pip install -r requirements.txt -t ./src/site-packages
      - save_cache:
          paths:
            - ./src/site-packages
          key: pip-{{ checksum "requirements.txt" }}
      - persist_to_workspace:
          root: .
          paths:
            - ./src
            - ./tests

  # Build the UI
  build-ui:
    working_directory: ~/ngpy-accounts-manager/ngpy-accounts-manager-ui
    docker:
      - image: << pipeline.parameters.docker-image-ui >>
    steps:
      - checkout:
          path: ~/ngpy-accounts-manager
      - restore_cache:
          keys:
            - npm-{{ checksum "package-lock.json" }}
            - npm-
      - run:
          name: "Get dependencies"
          command: npm ci --cache .npm --prefer-offline
      - save_cache:
          paths:
            - ./.npm
          key: npm-{{ checksum "package-lock.json" }}
      - run:
          name: "Build"
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .

  # Test the API
  test-api:
    working_directory: ~/ngpy-accounts-manager/ngpy-accounts-manager-api
    docker:
      - image: << pipeline.parameters.docker-image-api >>
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Test"
          command: PYTHONPATH=./src/site-packages:./src python -m pytest tests/
      - persist_to_workspace:
          root: .
          paths:
            - ./src

  # Test the UI
  test-ui:
    working_directory: ~/ngpy-accounts-manager/ngpy-accounts-manager-ui
    docker:
      - image: << pipeline.parameters.docker-image-ui >>-browsers
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: "Check install"
          command: |
            google-chrome --version
            chromedriver --version
      - attach_workspace:
          at: .
      - run:
          name: "Test"
          command: npm run test
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/ngpy-accounts-manager-ui

  # Release the API
  release-api:
    working_directory: ~/ngpy-accounts-manager/ngpy-accounts-manager-api
    docker:
      - image: << pipeline.parameters.docker-image-api >>
    steps:
      - checkout:
          path: ~/ngpy-accounts-manager
      - aws-ecr/build-and-push-image:
          path: ./ngpy-accounts-manager-api
          repo: "ngpy-accounts-manager"
          tag: "${CIRCLE_SHA1}"
          extra-build-args: "--build-arg SOURCE_VERSION=${CIRCLE_SHA1:0:7}"

  # Release the UI
  release-ui:
    working_directory: ~/ngpy-accounts-manager/ngpy-accounts-manager-ui
    docker:
      - image: << pipeline.parameters.docker-image-ui >>
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Packaging"
          command: |
            cd dist/ngpy-accounts-manager-ui
            zip -r ../ngpy-accounts-manager-ui.zip .
            cd ../..
      - aws-s3/copy:
          from: dist/ngpy-accounts-manager-ui.zip
          to: "s3://${AWS_S3_ARCHIVE}/ngpy-accounts-manager/"

workflows:
  # The main workflow
  build-and-test:
    jobs:
      # Build: API and UI
      - build-api:
          filters:
            branches:
              only: /.*/
      - build-ui:
          filters:
            branches:
              only: /.*/
      # Test: API and UI
      - test-api:
          requires:
            - build-api
          filters:
            branches:
              only: /.*/
      - test-ui:
          requires:
            - build-ui
          filters:
            branches:
              only: /.*/
      # Release: API and UI
      - release-api:
          requires:
            - test-api
            - test-ui
          filters:
            branches:
              only: << pipeline.parameters.branch-release >>
      - release-ui:
          requires:
            - test-api
            - test-ui
          filters:
            branches:
              only: << pipeline.parameters.branch-release >>
